---
title: "Supplementary Figure 14"
format: docx
---

# Blurb

**Supplementary Figure 14: Marker expression profiles of expanded cord blood V𝛿2 cells after TCR-mediated restimulation.** The beeswarm plots show the proportion of cells expressing the individual markers listed on the x-axis following reactivation with plate-bound anti-𝛾𝛿 TCR for cord blood V𝛿2 cells cultured for 17 days in the presence of (A) IL-2 alone, (B) IL-2 and Zoledronate, and (C) IL-2 and BCG. Symbols show individual values, boxplots show median and IQR, with whiskers indicating the +/- 1.5 IQR range. Shape and color identify HIV-exposure status.

# Code

```{r}
StorageLocation <- file.path("SupplementaryFigures", "SupplementaryFigure14")
panel <- file.path("data", "D17CytokinePanel.csv")
```

```{r}
#| code-fold: true
library(Coereba)
library(ggplot2)

shape_sex <- c("Female" = 22, "Male" = 21)
fill_sex <- c("Female" = "white", "Male" = "black")

shape_ptype <- c("HU" = 22, "HEU-lo" = 21, "HEU-hi" = 21)
fill_ptype <- c("HU" = "white", "HEU-lo" = "darkgray", "HEU-hi" = "black")

shape_art <- c("HU" = 22, "HEU" = 21)
fill_art <- c("HU" = "white", "HEU" = "black")

shape_viral <- c("NoViral" = 22, "Viral" = 21)
fill_viral <- c("NoViral" = "white", "Viral" = "black")
```

```{r}
XAxisLevels <- c("CD45RO", "CD27", "PD1", "CD56", "TNFa", "IFNg", "CD107a")
```

## Figure A

```{r}
File <- file.path("data", "D17CKIL2_ExpressionData.csv")
data <- read.csv(File, check.names=FALSE)
data$ptype <- factor(data$ptype, levels=c("HU", "HEU-lo", "HEU-hi"))

Plot <- Utility_MarkerPlots(data=data, panel=panel, myfactor="ptype", shape_palette = shape_ptype,
                            fill_palette = fill_ptype, XAxisLevels = XAxisLevels, savePlot=FALSE,
                            filterForThese = XAxisLevels, outpath=StorageLocation,
                            filename="D17CK_IL2_ptype", corral.width=0.8,
                            style="individual", width=12)

ThePlot <- Plot + scale_x_discrete(labels = function(y) {
    ifelse(y == "IFNg", expression(IFN * gamma),
           ifelse(y == "TNFa", expression(TNF * alpha),
                                       as.character(y)))
  })

TheFileName <- paste0("D17CK_IL2_ptype.png")
SendMeOnMyWay <- file.path(StorageLocation, TheFileName)
ggsave(filename = SendMeOnMyWay, ThePlot, dpi = 600, width = 9, height = 3) 
```

## Figure B

```{r}
File <- file.path("data", "D17CKZOL_ExpressionData.csv")
data <- read.csv(File, check.names=FALSE)
data$ptype <- factor(data$ptype, levels=c("HU", "HEU-lo", "HEU-hi"))

Plot <- Utility_MarkerPlots(data=data, panel=panel, myfactor="ptype", shape_palette = shape_ptype,
                            fill_palette = fill_ptype, XAxisLevels = XAxisLevels, savePlot=FALSE,
                            filterForThese = XAxisLevels, outpath=StorageLocation,
                            filename="D17CK_ZOL_ptype", corral.width=0.8,
                            style="individual", width=12)  
                            
ThePlot <- Plot + scale_x_discrete(labels = function(y) {
    ifelse(y == "IFNg", expression(IFN * gamma),
           ifelse(y == "TNFa", expression(TNF * alpha),
                                       as.character(y)))
  })

TheFileName <- paste0("D17CK_ZOL_ptype.png")
SendMeOnMyWay <- file.path(StorageLocation, TheFileName)
ggsave(filename = SendMeOnMyWay, ThePlot, dpi = 600, width = 9, height = 3)                            
```

## Figure C

```{r}
File <- file.path("data", "D17CKBCG_ExpressionData.csv")
data <- read.csv(File, check.names=FALSE)
data$ptype <- factor(data$ptype, levels=c("HU", "HEU-lo", "HEU-hi"))

Plot <- Utility_MarkerPlots(data=data, panel=panel, myfactor="ptype", shape_palette = shape_ptype,
                            fill_palette = fill_ptype, XAxisLevels = XAxisLevels, savePlot=FALSE,
                            filterForThese = XAxisLevels, outpath=StorageLocation,
                            filename="D17CK_BCG_ptype", corral.width=0.8,
                            style="individual", width=12)

ThePlot <- Plot + scale_x_discrete(labels = function(y) {
    ifelse(y == "IFNg", expression(IFN * gamma),
           ifelse(y == "TNFa", expression(TNF * alpha),
                                       as.character(y)))
  })

TheFileName <- paste0("D17CK_BCG_ptype.png")
SendMeOnMyWay <- file.path(StorageLocation, TheFileName)
ggsave(filename = SendMeOnMyWay, ThePlot, dpi = 600, width = 9, height = 3)
```

```{r}
print("GoodBye")
```
