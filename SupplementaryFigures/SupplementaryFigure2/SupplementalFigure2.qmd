---
title: "Tetramer vs Antibody Frequency"
format: html
---

# Blurb

**Supplementary Figure 2: Frequency of MAITs and NKTs by antibody versus tetramer staining.** The beeswarm plots display the frequency of ILT subsets, with individual symbols representing unique HU specimens, boxplots depicting median and IQR, with whiskers showing the +/- 1.5 IQR range. (A) Frequency of MAITs identified by antibody (CD161^hi^ V‚ç∫7.2+) or tetramer (CD161^hi^ hMR1 5-OP-RU+) cells, as percentage of viable T cells. (B) Frequency of NKTs by identified by antibody (V‚ç∫24J‚ç∫18+ cells) or tetramer (hCD1d PBS-57+) cells as percentage of viable T cells. Frequency of Vùõø2s in spectral flow cytometry (SFC) acquired specimens (C) or in a non-overlapping subset of conventional flow cytometry (CFC) acquired specimens (D), as percentage of viable T cells.

# Code

```{r}
library(Coereba)
library(dplyr)
library(purrr)
library(ggplot2)
```

```{r}
#| code-fold: true
shape_type <- c("Antibody" = 22, "Tetramer" = 21)
fill_type <- c("Antibody" = "white", "Tetramer" = "black")
```

```{r}
StorageLocation <- file.path("SupplementalFigures", "SupplementalFigure2")

AntibodyData <- read.csv("data/SFC_Ctrl_Antibody_Freq.csv", check.names=FALSE)
AntibodyData <- AntibodyData |> mutate(Type="Antibody")

TetramerData <- read.csv("data/SFC_Ctrl_Tetramer_Freq.csv", check.names=FALSE)
TetramerData <- TetramerData |> mutate(Type="Tetramer")

Data <- bind_rows(AntibodyData, TetramerData)
Data$Type <- factor(Data$Type, levels=c("Antibody", "Tetramer"))
```

```{r}
data <- Data |> filter(ptype %in%  "HU") |> filter(Type %in% "Tetramer")

# Figure 1 Stats were in %

SummaryStats <- data #|> filter(name %in% "NKT")
Utility_Stats(data = SummaryStats, var = "Vd2_Ratio", myfactor = "ptype", normality = "dagostino", correction = "BH", returnType = "median")

Utility_Stats(data = SummaryStats, var = "MAIT_Ratio", myfactor = "ptype", normality = "dagostino", correction = "BH", returnType = "median")

Utility_Stats(data = SummaryStats, var = "NKT_Ratio", myfactor = "ptype", normality = "dagostino", correction = "BH", returnType = "median")

# Data is already %, reverting to proportion

data <- Data |> filter(ptype %in%  "HU")

data <- data |> dplyr::mutate(MAIT_Ratio=MAIT_Ratio/100,
 NKT_Ratio=NKT_Ratio/100)

PlotName <- "MAIT_AbVsTet_Freq"

ThePlot <- map(names(data)[10], ~ Utility_Behemoth(
    data = data, var = .x, myfactor = "Type", normality = "dagostino",
     shape_palette = shape_type, fill_palette = fill_type, cex = 3, size = 3,
     corral.width = 3, showClose=TRUE, statLine=TRUE, statsHeight = NULL, scalePercent = TRUE, correction = "BH"))

Plot <- ThePlot[[1]] + labs(y = NULL, title = NULL) +
     theme(plot.caption = element_blank(),
      axis.text.y = element_text(size = 15),
       axis.text.x= element_text(size = 15)) #+ lims(y=c(0,NA))

Plot

Abbreviation <- ".png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, Plot, dpi = 600, width = 4, height = 3)
```

```{r}
data <- Data |> filter(ptype %in%  "HU")

# Data is already %, reverting to proportion

data <- data |> dplyr::mutate(MAIT_Ratio=MAIT_Ratio/100,
 NKT_Ratio=NKT_Ratio/100)

PlotName <- "NKT_AbVsTet_Freq"

ThePlot <- map(names(data)[11], ~ Utility_Behemoth(
    data = data, var = .x, myfactor = "Type", normality = "dagostino",
     shape_palette = shape_type, fill_palette = fill_type, cex = 3, size = 3,
     corral.width = 3, showClose=FALSE, statLine=TRUE, statsHeight = NULL, scalePercent = TRUE, correction = "BH", keepNS = FALSE))

Plot <- ThePlot[[1]] + labs(y = NULL, title = NULL) +
     theme(plot.caption = element_blank(),
      axis.text.y = element_text(size = 15),
       axis.text.x= element_text(size = 15)) #+ lims(y=c(0,NA))

Plot

Abbreviation <- ".png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, Plot, dpi = 600, width = 4, height = 3)
```

# SFC Freq Vd2

```{r}
#| code-fold: true
shape_sex <- c("Female" = 22, "Male" = 21)
fill_sex <- c("Female" = "white", "Male" = "black")

shape_ptype <- c("HU" = 22, "HEU-lo" = 21, "HEU-hi" = 21)
fill_ptype <- c("HU" = "white", "HEU-lo" = "darkgray", "HEU-hi" = "black")

shape_art <- c("HU" = 22, "HEU" = 21)
fill_art <- c("HU" = "white", "HEU" = "black")

shape_viral <- c("NoViral" = 22, "Viral" = 21)
fill_viral <- c("NoViral" = "white", "Viral" = "black")
```

```{r}
library(Coereba)
library(ggplot2)

StorageLocation <- file.path("SupplementalFigures/SupplementalFigure2")
data <- read.csv("data/SFC_Ctrl_Tetramer_Freq.csv", check.names=FALSE)

PlotName <- "Vd2Freq_SFC_Ptype"

data$ptype <- factor(data$ptype, levels=c("HU", "HEU-lo", "HEU-hi"))
data$infant_sex <- factor(data$infant_sex, levels=c("Female", "Male"))

# Derriving Median IQR of Lymphocytes acquired
SummaryStats <- data #|> filter(name %in% "NKT")
Utility_Stats(data = SummaryStats, var = "Tcells", myfactor = "condition", normality = "dagostino", correction = "BH", returnType = "median")

# Vd2_Ratio is actually percent. 
data <- data |> dplyr::mutate(Vd2_Ratio = Vd2_Ratio/100)

Plot <- Utility_Behemoth(data = data, var = "Vd2_Ratio", myfactor = "ptype",
 normality = "dagostino", shape_palette = shape_ptype, fill_palette = fill_ptype,
  cex = 3, size = 3, corral.width = 0.5, statLines = FALSE, statsHeight = 0.04, scalePercent = TRUE, correction = "BH")

ThePlot <- Plot + labs(y = NULL, title = NULL) +
     theme(plot.caption = element_blank(), title=element_blank(),
      axis.text.y = element_text(size = 15),
       axis.text.x= element_text(size = 15)) #+ lims(y=c(0,NA))

ThePlot

Abbreviation <- "_ptype.png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, ThePlot, dpi = 600, width = 4, height = 3)
```

# CFC Freq Vd2

```{r}
library(Coereba)
library(ggplot2)

StorageLocation <- file.path("SupplementalFigures/SupplementalFigure2")
data <- read.csv("data/Vd2Freq_CFC_Ptype.csv", check.names=FALSE)

PlotName <- "Vd2Freq_CFC_Ptype"

data$ptype <- factor(data$ptype, levels=c("HU", "HEU-lo", "HEU-hi"))
data$infant_sex <- factor(data$infant_sex, levels=c("Female", "Male"))

# Derriving Median IQR
SummaryStats <- data #|> filter(name %in% "NKT")
Utility_Stats(data = SummaryStats, var = "Tcells", myfactor = "condition", normality = "dagostino", correction = "BH", returnType = "median")

# Vd2_Ratio is actually percent. 
data <- data |> dplyr::mutate(Vd2_Ratio = Vd2_Ratio/100)

Plot <- Utility_Behemoth(data = data, var = "Vd2_Ratio", myfactor = "ptype",
 normality = "dagostino", shape_palette = shape_ptype, fill_palette = fill_ptype,
  cex = 3, size = 3, corral.width = 0.5, statLines = TRUE, statsHeight = 0.04, scalePercent = TRUE, correction = "BH", keepNS=FALSE)

ThePlot <- Plot + labs(y = NULL, title = NULL) +
     theme(plot.caption = element_blank(), title=element_blank(),
      axis.text.y = element_text(size = 15),
       axis.text.x= element_text(size = 15)) #+ lims(y=c(0,NA))

ThePlot

Abbreviation <- "_ptype.png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, ThePlot, dpi = 600, width = 4, height = 3)
```

```{r}
print("Goodbye")
```