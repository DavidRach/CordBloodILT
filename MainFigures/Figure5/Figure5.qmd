---
title: "Figure 5"
format: docx
---

# Blurb

**Figure 5: Functional heterogeneity of cord blood ILT in response to polyclonal stimulation ex-vivo** Thawed CBMC were stained with a panel of 29 mAbs after a 6 hour stimulation with PMA plus ionomycin in the presence of golgi inhibitors. (A) The dotplots of a representative specimen obtained from an unexposed (HU) neonate show the intracellular cytokine reponse (% of IFNùõæ+ by % of TNF‚ç∫+) for Vùõø2 T cells (top), MAITs (middle), NKTs (bottom). (B) The beeswarm boxplot depicts the frequency of TNF‚ç∫+ (top), IFNùõæ+ (middle), and TNF‚ç∫+ IFNùõæ+ (bottom) cells for different manually-gated cell subsets (listed on the x axis). Symbols depict individual values, boxplots show median and IQR, with whiskers indicating the +/- 1.5 IQR range. Shape and color identify HIV-exposure status. (C) A PaCMAP is used to visualize ILT subsets after PMA+ionomycin stimulation, including NKTs and MAITs (identified by anti-TCR staining). The gates are based on density-distribution and marker expression, with color code and cell counts included in the legend. (D) The heatmap summarizes marker expression for ILT islands from the PaCMAP in C. The 50th percentile of the distribution of median frequencies of cells positive for each marker is displayed by a combination of colors and symbols.

# Code

```{r}
library(Coereba)
library(gt)
library(ggplot2)
library(dplyr)
```

## Figure B.I

```{r}
StorageLocation <- file.path("MainFigures", "Figure5")
Data <- read.csv("data/CytokinesByPop.csv")
Data <- Data |> dplyr::filter(ptype == "HU")

Data$CellPop <- gsub("+", "", fixed=TRUE, Data$CellPop)
#Data$CellPop <- gsub("MAITs", "MAIT", fixed=TRUE, Data$CellPop)
#Data$CellPop <- gsub("NKTs", "NKT", fixed=TRUE, Data$CellPop)
Data$CellPop <- factor(Data$CellPop, levels=c("Vd2", "MAITs", "NKTs", "CD8", "CD4", "NK"))

Data <- Data |> mutate(TNFaTotal=`Q1..IFNg....TNFa.` + `Q2..IFNg....TNFa.`)
Data <- Data |> mutate(IFNgTotal=`Q2..IFNg....TNFa.`+`Q3..IFNg....TNFa.`)

Data <- Data |> filter(ptype %in% "HU")
Data <- Data |> unique()

SummaryStats <- Data |> dplyr::filter(CellPop %in% "Vd2")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)

SummaryStats <- Data |> dplyr::filter(CellPop %in% "MAITs")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)

SummaryStats <- Data |> dplyr::filter(CellPop %in% "NKTs")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)

SummaryStats <- Data |> dplyr::filter(CellPop %in% "NK")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)

SummaryStats <- Data |> dplyr::filter(CellPop %in% "CD4")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)

SummaryStats <- Data |> dplyr::filter(CellPop %in% "CD8")
Summaries <- purrr::map_dfr(colnames(SummaryStats[c(6, 9:10)]), ~ Utility_Stats(data = SummaryStats,var = .x, myfactor = "CellPop",
  normality = "dagostino", correction = "BH", returnType = "median"))
# View(Summaries)
```

```{r}
shape_ILTs <- c("Vd2" = 21, "MAITs" = 23, "NKTs"=22, "CD8"=25, "CD4"=24, "NK"=21)
fill_ILTs <- c("Vd2" = "red","MAITs" = "purple", "NKTs"="orange", "CD8"="green", "CD4"="blue", "NK"="black")
```

```{r}
PlotName <- "SubsetsTotalTNFa"

ThePlot <- purrr::map(names(Data)[9], ~ Utility_Behemoth(data = Data, var = .x, myfactor = "CellPop", normality = "dagostino", shape_palette = shape_ILTs, fill_palette = fill_ILTs, cex = 2, size = 3, corral.width = 1, statLines=FALSE, statsHeight=0.8, scalePercent = TRUE, correction = "BH"))

Plot <- ThePlot[[1]] + labs(y = NULL, title = NULL) + theme(plot.caption = element_blank(), axis.text.y = element_text(size = 15), axis.text.x= element_text(size = 15, angle = 45, hjust=1)) + scale_x_discrete(labels = function(y) {
    ifelse(y == "Vd2", expression(V * delta * " " * 2 * s),
                                       as.character(y))
  })

Plot

Abbreviation <- "_Antibody.png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, Plot, dpi = 600, width = 4, height = 3)
```

## Figure B.II

```{r}
PlotName <- "SubsetsTotalIFNg"

ThePlot <- purrr::map(names(Data)[10], ~ Utility_Behemoth(data = Data, var = .x, myfactor = "CellPop", normality = "dagostino", shape_palette = shape_ILTs, fill_palette = fill_ILTs, cex = 1.6, size = 3, corral.width = 0.8, statLines=FALSE, statsHeight=0.8, scalePercent = TRUE, correction = "BH"))

Plot <- ThePlot[[1]] + labs(y = NULL, title = NULL) + theme(plot.caption = element_blank(), axis.text.y = element_text(size = 15), axis.text.x= element_text(size = 15, angle = 45, hjust=1)) + scale_x_discrete(labels = function(y) {
    ifelse(y == "Vd2", expression(V * delta * " " * 2 * s),
                                       as.character(y))
  })

Plot

Abbreviation <- "_Antibody.png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, Plot, dpi = 600, width = 4, height = 3)
```

## Figure B.III

```{r}
PlotName <- "SubsetsTNFa+IFNg+"

ThePlot <- purrr::map(names(Data)[6], ~ Utility_Behemoth(data = Data, var = .x, myfactor = "CellPop", normality = "dagostino", shape_palette = shape_ILTs, fill_palette = fill_ILTs, cex = 1.6, size = 3, corral.width = 0.8, statLines=FALSE, statsHeight=0.8, scalePercent = TRUE, correction = "BH"))

Plot <- ThePlot[[1]] + labs(y = NULL, title = NULL) + theme(plot.caption = element_blank(), axis.text.y = element_text(size = 15), axis.text.x= element_text(size = 15, angle = 45, hjust=1)) + scale_x_discrete(labels = function(y) {
    ifelse(y == "Vd2", expression(V * delta * " " * 2 * s),
                                       as.character(y))
  })

Plot

Abbreviation <- "_Antibody.png"
ThePlotName <- paste0(PlotName, Abbreviation)
TheFile <- file.path(StorageLocation, ThePlotName)

ggsave(filename = TheFile, Plot, dpi = 600, width = 4, height = 3)
```

## Figure D

```{r}
StorageLocation <- file.path("MainFigures", "Figure5")
data <- file.path("data", "ILT_PMAIsland_HeatmapData.csv")
data <- read.csv(data, check.names=TRUE)
```

```{r}
RemoveMarkers <- c("DumpChannel", "Viability", "CXCR3", "CCR7")
MarkerOrder <- c("CD7", "CD3", "Vd2", "Va7.2", "Va24Ja18", "CD8", "CD4", "CD26", "CCR6", "CD161",
                 "NKG2D", "CD56", "CD16", "CD62L", "CD27", "CD45RA", "CD127", "CD25", "CCR4",
                 "PD1", "CD38", "CD69", "TNFa", "IFNg", "CD107a")

Table <- Coereba:::Coereba_Heatmap(data=data, RemoveMarkers=RemoveMarkers, MarkerOrder=MarkerOrder)
```

```{r}
Bolded <- Table |> 
  cols_label(Vd2_CD4 ~ md('**V&delta;2<br>CD4**')) |>
  cols_label(Vd2_CD8 ~ md('**V&delta;2<br>CD8**')) |> 
  cols_label(Vd2_DN ~ md('**V&delta;2<br>DN**')) |>
  cols_label(Vd2_T17 ~ md('**V&delta;2<br>T17**')) |> 
  cols_label(Vd2_PD1 ~ md('**V&delta;2<br>PD1**')) |>
  cols_label(Marker ~ md('**Marker<br>**')) |> 
  cols_label(MAITs ~ md('**MAITs<br>**')) |>
  cols_label(NKTs ~ md('**NKTs<br>**'))

Greeked <- Bolded |>
  sub_values(pattern="Vd2", replacement = "V\u03B42") |>
  sub_values(pattern="TNFa", replacement = "TNF\u03B1") |> 
  sub_values(pattern="IFNg", replacement = "IFN\u03B3") |>
  sub_values(pattern="Va7.2", replacement = "V\u03B17.2") |> 
  sub_values(pattern="Va24Ja18", replacement = "V\u03B124J\u03B118")

Greeked <- Greeked |> opt_table_outline(style="solid", width=px(2), color="black") |>
  tab_options(column_labels.border.top.style = "solid", column_labels.border.top.width = px(2),
              column_labels.border.top.color = "black", table.border.bottom.style = "double",
              table.border.bottom.width = px(2), table.border.bottom.color = "black", 
              table.font.size = 22)
```

```{r}
filename <- "ILT_PMA_Heatmap.png"
StorageLocation <- file.path(StorageLocation, filename)
Greeked |> gtsave(StorageLocation, vwidth = 1500, vheight = 1000)
```

```{r}
print("Goodbye")
```